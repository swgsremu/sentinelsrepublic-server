/*
				Copyright <SWGEmu>
		See file COPYING for copying conditions.*/

package server.zone.srcustom.objects.intangible.structure.StructureControlDevice;

import server.zone.objects.intangible.ControlDevice;
import server.zone.objects.creature.CreatureObject;
import server.zone.objects.structure.StructureObject;
import server.zone.packets.object.ObjectMenuResponse;
import server.zone.packets.scene.AttributeListMessage;

class StructureControlDevice extends ControlDevice {

	public StructureControlDevice() {
		Logger.setLoggingName("StructureControlDevice");
		Logger.setLogging(false);
		Logger.setGlobalLogging(true);
	}

	/**
	 * Fills the radial options, needs to be overriden
	 * @pre { this object is locked }
	 * @post { this object is locked, menuResponse is complete}
	 * @param menuResponse ObjectMenuResponse that will be sent to the client
	 */
	@local
	@dirty
	public native void fillObjectMenuResponse(ObjectMenuResponse menuResponse, CreatureObject player);

	/**
	 * Handles the radial selection sent by the client, must be overriden by inherited objects
	 * @pre { this object is locked, player is locked }
	 * @post { this object is locked, player is locked }
	 * @param player CreatureObject that selected the option
	 * @param selectedID selected menu id
	 * @returns 0 if successfull
	 */
	public native int handleObjectMenuSelect(CreatureObject player, byte selectedID);

	@local
	@dirty
	public native void placeStructureMode(CreatureObject player, StructureObject structure);

	public native int placeStructure(CreatureObject creature, float x, float y, int angle);
	public native int notifyStructurePlaced(CreatureObject creature, StructureObject structure);

	/**
	 * Fills the attribute list message options that are sent to player creature
	 * @pre { }
	 * @post { }
	 * @param msg attribute list message with the attributes
	 * @param object player creature to which the message is sent
	 */
	@local
	@dirty
	public native void fillAttributeList(AttributeListMessage msg, CreatureObject object);

	@dirty
	public boolean isStructureControlDevice() {
		return true;
	}
}